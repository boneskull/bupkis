exports[`Async Parametric Assertion Error Snapshots > \"{function} 'to fulfill with value satisfying' / 'to resolve with value satisfying' {unknown}\" [function-to-fulfill-with-value-satisfying-to-resolve-with-value-satisfying-unknown-3s3p] > should throw a consistent AssertionError [function-to-fulfill-with-value-satisfying-to-resolve-with-value-satisfying-unknown-3s3p] <snapshot> 1`] = `
{
  "message": "Assertion \\"{function} 'to fulfill with value satisfying' / 'to resolve with value satisfying' {unknown}\\" failed:\\n  Comparing two different types of values. Expected \\u001b[32mnumber\\u001b[39m but received \\u001b[31mstring\\u001b[39m.",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "actual": "wrong",
  "expected": 42,
  "diff": "simple",
  "assertionId": "function-to-fulfill-with-value-satisfying-to-resolve-with-value-satisfying-unknown-3s3p"
}
`;

exports[`Async Parametric Assertion Error Snapshots > \"{function} 'to reject with a' / 'to reject with an' {constructible}\" [function-to-reject-with-a-to-reject-with-an-constructible-3s3p] > should throw a consistent AssertionError [function-to-reject-with-a-to-reject-with-an-constructible-3s3p] <snapshot> 1`] = `
{
  "message": "Expected function to reject with an instance of TypeError, but it rejected with a Error",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "actual": "Error",
  "expected": "TypeError",
  "diff": "simple",
  "assertionId": "function-to-reject-with-a-to-reject-with-an-constructible-3s3p"
}
`;

exports[`Async Parametric Assertion Error Snapshots > \"{function} 'to reject with error satisfying' {unknown}\" [function-to-reject-with-error-satisfying-unknown-3s3p] (with object parameter) > should throw a consistent AssertionError [function-to-reject-with-error-satisfying-unknown-3s3p] <snapshot> 1`] = `
{
  "message": "Assertion \\"{function} 'to reject with error satisfying' {unknown}\\" failed:\\n\\u001b[32m- expected  - 3\\u001b[39m\\n\\u001b[31m+ actual    + 1\\u001b[39m\\n\\n\\u001b[32m- Object {\\u001b[39m\\n\\u001b[32m-   \\"message\\": \\"expected message\\",\\u001b[39m\\n\\u001b[32m- }\\u001b[39m\\n\\u001b[31m+ [Error: wrong message]\\u001b[39m",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "actual": {
    "message": "wrong message"
  },
  "expected": {
    "message": "expected message"
  },
  "diff": "simple",
  "assertionId": "function-to-reject-with-error-satisfying-unknown-3s3p"
}
`;

exports[`Async Parametric Assertion Error Snapshots > \"{function} 'to reject with error satisfying' {unknown}\" [function-to-reject-with-error-satisfying-unknown-3s3p] (with object regex parameter) > should throw a consistent AssertionError [function-to-reject-with-error-satisfying-unknown-3s3p] <snapshot> 1`] = `
{
  "message": "Assertion \\"{function} 'to reject with error satisfying' {unknown}\\" failed:\\n\\u001b[32m- expected  - 3\\u001b[39m\\n\\u001b[31m+ actual    + 1\\u001b[39m\\n\\n\\u001b[32m- Object {\\u001b[39m\\n\\u001b[32m-   \\"message\\": \\"<string matching /expected message/>\\",\\u001b[39m\\n\\u001b[32m- }\\u001b[39m\\n\\u001b[31m+ [Error: wrong message]\\u001b[39m",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "actual": {
    "message": "wrong message"
  },
  "expected": {
    "message": "<string matching /expected message/>"
  },
  "diff": "simple",
  "assertionId": "function-to-reject-with-error-satisfying-unknown-3s3p"
}
`;

exports[`Async Parametric Assertion Error Snapshots > \"{function} 'to reject with error satisfying' {unknown}\" [function-to-reject-with-error-satisfying-unknown-3s3p] (with regex parameter) > should throw a consistent AssertionError [function-to-reject-with-error-satisfying-unknown-3s3p] <snapshot> 1`] = `
{
  "message": "Assertion \\"{function} 'to reject with error satisfying' {unknown}\\" failed:\\nInvalid input",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "actual": {
    "message": "wrong message"
  },
  "diff": "simple",
  "assertionId": "function-to-reject-with-error-satisfying-unknown-3s3p"
}
`;

exports[`Async Parametric Assertion Error Snapshots > \"{function} 'to reject'\" [function-to-reject-2s2p] > should throw a consistent AssertionError [function-to-reject-2s2p] <snapshot> 1`] = `
{
  "message": "Expected function to reject, but it fulfilled with 'success'",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "diff": "simple",
  "assertionId": "function-to-reject-2s2p"
}
`;

exports[`Async Parametric Assertion Error Snapshots > \"{function} 'to resolve' / 'to fulfill'\" [function-to-resolve-to-fulfill-2s2p] > should throw a consistent AssertionError [function-to-resolve-to-fulfill-2s2p] <snapshot> 1`] = `
{
  "message": "Expected function to fulfill, but it rejected instead",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "diff": "simple",
  "assertionId": "function-to-resolve-to-fulfill-2s2p"
}
`;

exports[`Async Parametric Assertion Error Snapshots > \"{promiselike} 'to fulfill with value satisfying' / 'to resolve with value satisfying' {unknown}\" [promiselike-to-fulfill-with-value-satisfying-to-resolve-with-value-satisfying-unknown-3s3p] > should throw a consistent AssertionError [promiselike-to-fulfill-with-value-satisfying-to-resolve-with-value-satisfying-unknown-3s3p] <snapshot> 1`] = `
{
  "message": "Assertion \\"{promiselike} 'to fulfill with value satisfying' / 'to resolve with value satisfying' {unknown}\\" failed:\\n  Comparing two different types of values. Expected \\u001b[32mnumber\\u001b[39m but received \\u001b[31mstring\\u001b[39m.",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "actual": "wrong",
  "expected": 42,
  "diff": "simple",
  "assertionId": "promiselike-to-fulfill-with-value-satisfying-to-resolve-with-value-satisfying-unknown-3s3p"
}
`;

exports[`Async Parametric Assertion Error Snapshots > \"{promiselike} 'to reject with a' / 'to reject with an' {constructible}\" [promiselike-to-reject-with-a-to-reject-with-an-constructible-3s3p] > should throw a consistent AssertionError [promiselike-to-reject-with-a-to-reject-with-an-constructible-3s3p] <snapshot> 1`] = `
{
  "message": "Expected Promise to reject with an instance of TypeError, but it rejected with a Error",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "actual": "Error",
  "expected": "TypeError",
  "diff": "simple",
  "assertionId": "promiselike-to-reject-with-a-to-reject-with-an-constructible-3s3p"
}
`;

exports[`Async Parametric Assertion Error Snapshots > \"{promiselike} 'to reject with error satisfying' {unknown}\" [promiselike-to-reject-with-error-satisfying-unknown-3s3p] > should throw a consistent AssertionError [promiselike-to-reject-with-error-satisfying-unknown-3s3p] <snapshot> 1`] = `
{
  "message": "Assertion \\"{promiselike} 'to reject with error satisfying' {unknown}\\" failed:\\n\\u001b[32m- expected  - 3\\u001b[39m\\n\\u001b[31m+ actual    + 1\\u001b[39m\\n\\n\\u001b[32m- Object {\\u001b[39m\\n\\u001b[32m-   \\"message\\": \\"expected message\\",\\u001b[39m\\n\\u001b[32m- }\\u001b[39m\\n\\u001b[31m+ [Error: wrong message]\\u001b[39m",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "actual": {
    "message": "wrong message"
  },
  "expected": {
    "message": "expected message"
  },
  "diff": "simple",
  "assertionId": "promiselike-to-reject-with-error-satisfying-unknown-3s3p"
}
`;

exports[`Async Parametric Assertion Error Snapshots > \"{promiselike} 'to reject'\" [promiselike-to-reject-2s2p] > should throw a consistent AssertionError [promiselike-to-reject-2s2p] <snapshot> 1`] = `
{
  "message": "Expected Promise to reject, but it fulfilled with 'success'",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "diff": "simple",
  "assertionId": "promiselike-to-reject-2s2p"
}
`;

exports[`Async Parametric Assertion Error Snapshots > \"{promiselike} 'to resolve' / 'to fulfill'\" [promiselike-to-resolve-to-fulfill-2s2p] > should throw a consistent AssertionError [promiselike-to-resolve-to-fulfill-2s2p] <snapshot> 1`] = `
{
  "message": "Expected promise to fulfill, but it rejected instead",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "diff": "simple",
  "assertionId": "promiselike-to-resolve-to-fulfill-2s2p"
}
`;
