exports[`Sync Collection Assertion Error Snapshots > \"{map | set} 'to have size between' {[nonnegative-integer, nonnegative-integer]}\" [map-set-to-have-size-between-nonnegative_integer-nonnegative_integer-3s3p] > should throw a consistent AssertionError [map-set-to-have-size-between-nonnegative_integer-nonnegative_integer-3s3p] <snapshot> 1`] = `
{
  "message": "Expected Set to have size between 1 and 3, got 4",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "diff": "simple",
  "assertionId": "map-set-to-have-size-between-nonnegative_integer-nonnegative_integer-3s3p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{map | set} 'to have size greater than' {nonnegative-integer}\" [map-set-to-have-size-greater-than-nonnegative_integer-3s3p] > should throw a consistent AssertionError [map-set-to-have-size-greater-than-nonnegative_integer-3s3p] <snapshot> 1`] = `
{
  "message": "Expected Set to have size greater than 2, got 1",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "actual": 1,
  "expected": 2,
  "diff": "simple",
  "assertionId": "map-set-to-have-size-greater-than-nonnegative_integer-3s3p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{map | set} 'to have size less than' {nonnegative-integer}\" [map-set-to-have-size-less-than-nonnegative_integer-3s3p] > should throw a consistent AssertionError [map-set-to-have-size-less-than-nonnegative_integer-3s3p] <snapshot> 1`] = `
{
  "message": "Expected Set to have size less than 2, got 3",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "actual": 3,
  "expected": 2,
  "diff": "simple",
  "assertionId": "map-set-to-have-size-less-than-nonnegative_integer-3s3p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{map-or-weakmap} 'to contain' / 'to include' {unknown}\" [map_or_weakmap-to-contain-to-include-unknown-3s3p] > should throw a consistent AssertionError [map_or_weakmap-to-contain-to-include-unknown-3s3p] <snapshot> 1`] = `
{
  "message": "Expected Map to contain key",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "actual": "missing",
  "expected": "key to exist in Map",
  "diff": "simple",
  "assertionId": "map_or_weakmap-to-contain-to-include-unknown-3s3p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{map-or-weakmap} 'to have entry' / 'to have key/value pair' / 'to contain entry' / 'to contain key/value pair' / 'to include entry' / 'to include key/value pair' {[unknown, unknown]}\" [map_or_weakmap-to-have-entry-to-have-keyvalue-pair-to-contain-entry-to-contain-keyvalue-pair-to-include-entry-to-include-keyvalue-pair-unknown-unknown-3s3p] > should throw a consistent AssertionError [map_or_weakmap-to-have-entry-to-have-keyvalue-pair-to-contain-entry-to-contain-keyvalue-pair-to-include-entry-to-include-keyvalue-pair-unknown-unknown-3s3p] <snapshot> 1`] = `
{
  "message": "Expected Map entry [key, value] to equal [key, wrong]",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "actual": [
    "key",
    "value"
  ],
  "expected": [
    "key",
    "wrong"
  ],
  "diff": "simple",
  "assertionId": "map_or_weakmap-to-have-entry-to-have-keyvalue-pair-to-contain-entry-to-contain-keyvalue-pair-to-include-entry-to-include-keyvalue-pair-unknown-unknown-3s3p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{map} 'to be empty'\" [map-to-be-empty-2s2p] > should throw a consistent AssertionError [map-to-be-empty-2s2p] <snapshot> 1`] = `
{
  "message": "Assertion \\"{map} 'to be empty'\\" failed:\\n\\u001b[2mCompared values have no visual difference.\\u001b[22m",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "actual": {},
  "expected": {},
  "diff": "simple",
  "assertionId": "map-to-be-empty-2s2p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{map} 'to equal' {map}\" [map-to-equal-map-3s3p] > should throw a consistent AssertionError [map-to-equal-map-3s3p] <snapshot> 1`] = `
{
  "message": "Expected Maps to have equal value for key b",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "actual": [
    "b",
    3
  ],
  "expected": [
    "b",
    2
  ],
  "diff": "simple",
  "assertionId": "map-to-equal-map-3s3p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{map} 'to have key' {unknown}\" [map-to-have-key-unknown-3s3p] > should throw a consistent AssertionError [map-to-have-key-unknown-3s3p] <snapshot> 1`] = `
{
  "message": "Expected Map to have key",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "actual": [
    "key"
  ],
  "expected": [
    "key",
    "missing"
  ],
  "diff": "simple",
  "assertionId": "map-to-have-key-unknown-3s3p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{map} 'to have size' {nonnegative-integer}\" [map-to-have-size-nonnegative_integer-3s3p] > should throw a consistent AssertionError [map-to-have-size-nonnegative_integer-3s3p] <snapshot> 1`] = `
{
  "message": "Assertion \\"{map} 'to have size' {nonnegative-integer}\\" failed:\\n\\u001b[2mCompared values have no visual difference.\\u001b[22m",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "actual": {},
  "expected": {},
  "diff": "simple",
  "assertionId": "map-to-have-size-nonnegative_integer-3s3p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{map} 'to have value' / 'to contain value' / 'to include value' {unknown}\" [map-to-have-value-to-contain-value-to-include-value-unknown-3s3p] > should throw a consistent AssertionError [map-to-have-value-to-contain-value-to-include-value-unknown-3s3p] <snapshot> 1`] = `
{
  "message": "Expected Map to have value",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "actual": [
    "value"
  ],
  "expected": "missing",
  "diff": "simple",
  "assertionId": "map-to-have-value-to-contain-value-to-include-value-unknown-3s3p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{non-collection-object} 'to have exact key' / 'to have exact property' / 'to have exact prop' {property-key}\" [non_collection_object-to-have-exact-key-to-have-exact-property-to-have-exact-prop-property_key-3s3p] > should throw a consistent AssertionError [non_collection_object-to-have-exact-key-to-have-exact-property-to-have-exact-prop-property_key-3s3p] <snapshot> 1`] = `
{
  "message": "Assertion \\"{non-collection-object} 'to have exact key' / 'to have exact property' / 'to have exact prop' {property-key}\\" failed:\\n\\u001b[2mCompared values have no visual difference.\\u001b[22m",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "actual": {
    "foo": "bar"
  },
  "expected": {
    "foo": "bar"
  },
  "diff": "simple",
  "assertionId": "non_collection_object-to-have-exact-key-to-have-exact-property-to-have-exact-prop-property_key-3s3p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{non-collection-object} 'to have key' / 'to have property' / 'to have prop' / 'to contain key' / 'to contain property' / 'to contain prop' / 'to include key' / 'to include property' / 'to include prop' {keypath}\" [non_collection_object-to-have-key-to-have-property-to-have-prop-to-contain-key-to-contain-property-to-contain-prop-to-include-key-to-include-property-to-include-prop-keypath-3s3p] > should throw a consistent AssertionError [non_collection_object-to-have-key-to-have-property-to-have-prop-to-contain-key-to-contain-property-to-contain-prop-to-include-key-to-include-property-to-include-prop-keypath-3s3p] <snapshot> 1`] = `
{
  "message": "Expected object to contain keypath missing.path",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "actual": "no such keypath",
  "diff": "simple",
  "assertionId": "non_collection_object-to-have-key-to-have-property-to-have-prop-to-contain-key-to-contain-property-to-contain-prop-to-include-key-to-include-property-to-include-prop-keypath-3s3p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{non-collection-object} 'to have keys' / 'to have properties' / 'to have props' / 'to contain keys' / 'to contain properties' / 'to contain props' / 'to include keys' / 'to include properties' / 'to include props' {property-key[]}\" [non_collection_object-to-have-keys-to-have-properties-to-have-props-to-contain-keys-to-contain-properties-to-contain-props-to-include-keys-to-include-properties-to-include-props-property_key-3s3p] > should throw a consistent AssertionError [non_collection_object-to-have-keys-to-have-properties-to-have-props-to-contain-keys-to-contain-properties-to-contain-props-to-include-keys-to-include-properties-to-include-props-property_key-3s3p] <snapshot> 1`] = `
{
  "message": "Assertion \\"{non-collection-object} 'to have keys' / 'to have properties' / 'to have props' / 'to contain keys' / 'to contain properties' / 'to contain props' / 'to include keys' / 'to include properties' / 'to include props' {property-key[]}\\" failed:\\n\\u001b[2mCompared values have no visual difference.\\u001b[22m",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "actual": {
    "a": 1
  },
  "expected": {
    "a": 1
  },
  "diff": "simple",
  "assertionId": "non_collection_object-to-have-keys-to-have-properties-to-have-props-to-contain-keys-to-contain-properties-to-contain-props-to-include-keys-to-include-properties-to-include-props-property_key-3s3p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{record} 'to have size' {nonnegative-integer}\" [record-to-have-size-nonnegative_integer-3s3p] > should throw a consistent AssertionError [record-to-have-size-nonnegative_integer-3s3p] <snapshot> 1`] = `
{
  "message": "Expected object to have 3 keys, but it has 1 keys",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "actual": 1,
  "expected": 3,
  "diff": "simple",
  "assertionId": "record-to-have-size-nonnegative_integer-3s3p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{set-or-weakset} 'to contain' / 'to include' {unknown}\" [set_or_weakset-to-contain-to-include-unknown-3s3p] > should throw a consistent AssertionError [set_or_weakset-to-contain-to-include-unknown-3s3p] <snapshot> 1`] = `
{
  "message": "Expected Set to contain value",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "actual": "c",
  "expected": "value to exist in Set",
  "diff": "simple",
  "assertionId": "set_or_weakset-to-contain-to-include-unknown-3s3p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{set} 'to be a subset of' {set}\" [set-to-be-a-subset-of-set-3s3p] > should throw a consistent AssertionError [set-to-be-a-subset-of-set-3s3p] <snapshot> 1`] = `
{
  "message": "Assertion \\"{set} 'to be a subset of' {set}\\" failed for arguments: [ Set(2) { 1, 4 }, 'to be a subset of', Set(3) { 1, 2, 3 } ]",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "diff": "simple",
  "assertionId": "set-to-be-a-subset-of-set-3s3p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{set} 'to be a superset of' {set}\" [set-to-be-a-superset-of-set-3s3p] > should throw a consistent AssertionError [set-to-be-a-superset-of-set-3s3p] <snapshot> 1`] = `
{
  "message": "Assertion \\"{set} 'to be a superset of' {set}\\" failed for arguments: [ Set(2) { 1, 2 }, 'to be a superset of', Set(3) { 1, 2, 3 } ]",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "diff": "simple",
  "assertionId": "set-to-be-a-superset-of-set-3s3p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{set} 'to be disjoint from' {set}\" [set-to-be-disjoint-from-set-3s3p] > should throw a consistent AssertionError [set-to-be-disjoint-from-set-3s3p] <snapshot> 1`] = `
{
  "message": "Assertion \\"{set} 'to be disjoint from' {set}\\" failed for arguments: [ Set(2) { 1, 2 }, 'to be disjoint from', Set(2) { 2, 3 } ]",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "diff": "simple",
  "assertionId": "set-to-be-disjoint-from-set-3s3p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{set} 'to be empty'\" [set-to-be-empty-2s2p] > should throw a consistent AssertionError [set-to-be-empty-2s2p] <snapshot> 1`] = `
{
  "message": "Assertion \\"{set} 'to be empty'\\" failed:\\n\\u001b[2mCompared values have no visual difference.\\u001b[22m",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "actual": {},
  "expected": {},
  "diff": "simple",
  "assertionId": "set-to-be-empty-2s2p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{set} 'to equal' {set}\" [set-to-equal-set-3s3p] > should throw a consistent AssertionError [set-to-equal-set-3s3p] <snapshot> 1`] = `
{
  "message": "Assertion \\"{set} 'to equal' {set}\\" failed for arguments: [ Set(2) { 1, 2 }, 'to equal', Set(2) { 1, 3 } ]",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "diff": "simple",
  "assertionId": "set-to-equal-set-3s3p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{set} 'to have difference' {set} 'equal to' {set}\" [set-to-have-difference-set-equal-to-set-5s5p] > should throw a consistent AssertionError [set-to-have-difference-set-equal-to-set-5s5p] <snapshot> 1`] = `
{
  "message": "Assertion \\"{set} 'to have difference' {set} 'equal to' {set}\\" failed for arguments: [\\n  Set(3) { 1, 2, 3 },\\n  'to have difference',\\n  Set(2) { 2, 4 },\\n  'equal to',\\n  Set(2) { 1, 2 }\\n]",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "diff": "simple",
  "assertionId": "set-to-have-difference-set-equal-to-set-5s5p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{set} 'to have intersection' {set} 'equal to' {set}\" [set-to-have-intersection-set-equal-to-set-5s5p] > should throw a consistent AssertionError [set-to-have-intersection-set-equal-to-set-5s5p] <snapshot> 1`] = `
{
  "message": "Assertion \\"{set} 'to have intersection' {set} 'equal to' {set}\\" failed for arguments: [\\n  Set(3) { 1, 2, 3 },\\n  'to have intersection',\\n  Set(3) { 2, 3, 4 },\\n  'equal to',\\n  Set(3) { 2, 3, 4 }\\n]",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "diff": "simple",
  "assertionId": "set-to-have-intersection-set-equal-to-set-5s5p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{set} 'to have size' {nonnegative-integer}\" [set-to-have-size-nonnegative_integer-3s3p] > should throw a consistent AssertionError [set-to-have-size-nonnegative_integer-3s3p] <snapshot> 1`] = `
{
  "message": "Assertion \\"{set} 'to have size' {nonnegative-integer}\\" failed:\\n  Comparing two different types of values. Expected \\u001b[32mnumber\\u001b[39m but received \\u001b[31mset\\u001b[39m.",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "actual": {},
  "expected": 3,
  "diff": "simple",
  "assertionId": "set-to-have-size-nonnegative_integer-3s3p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{set} 'to have symmetric difference' {set} 'equal to' {set}\" [set-to-have-symmetric-difference-set-equal-to-set-5s5p] > should throw a consistent AssertionError [set-to-have-symmetric-difference-set-equal-to-set-5s5p] <snapshot> 1`] = `
{
  "message": "Assertion \\"{set} 'to have symmetric difference' {set} 'equal to' {set}\\" failed for arguments: [\\n  Set(2) { 1, 2 },\\n  'to have symmetric difference',\\n  Set(2) { 2, 3 },\\n  'equal to',\\n  Set(2) { 1, 2 }\\n]",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "diff": "simple",
  "assertionId": "set-to-have-symmetric-difference-set-equal-to-set-5s5p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{set} 'to have union' {set} 'equal to' {set}\" [set-to-have-union-set-equal-to-set-5s5p] > should throw a consistent AssertionError [set-to-have-union-set-equal-to-set-5s5p] <snapshot> 1`] = `
{
  "message": "Assertion \\"{set} 'to have union' {set} 'equal to' {set}\\" failed for arguments: [\\n  Set(2) { 1, 2 },\\n  'to have union',\\n  Set(1) { 3 },\\n  'equal to',\\n  Set(3) { 1, 2, 4 }\\n]",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "diff": "simple",
  "assertionId": "set-to-have-union-set-equal-to-set-5s5p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{set} 'to intersect with' {set}\" [set-to-intersect-with-set-3s3p] > should throw a consistent AssertionError [set-to-intersect-with-set-3s3p] <snapshot> 1`] = `
{
  "message": "Assertion \\"{set} 'to intersect with' {set}\\" failed for arguments: [ Set(2) { 1, 2 }, 'to intersect with', Set(2) { 3, 4 } ]",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "diff": "simple",
  "assertionId": "set-to-intersect-with-set-3s3p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{unknown-array} 'to be non-empty'\" [unknown_array-to-be-non_empty-2s2p] > should throw a consistent AssertionError [unknown_array-to-be-non_empty-2s2p] <snapshot> 1`] = `
{
  "message": "Assertion \\"{unknown-array} 'to be non-empty'\\" failed:\\n\\u001b[32m- expected  - 3\\u001b[39m\\n\\u001b[31m+ actual    + 1\\u001b[39m\\n\\n\\u001b[32m- Array [\\u001b[39m\\n\\u001b[32m-   null,\\u001b[39m\\n\\u001b[32m- ]\\u001b[39m\\n\\u001b[31m+ Array []\\u001b[39m",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "actual": [],
  "expected": [
    null
  ],
  "diff": "simple",
  "assertionId": "unknown_array-to-be-non_empty-2s2p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{unknown-array} 'to contain' / 'to include' {unknown}\" [unknown_array-to-contain-to-include-unknown-3s3p] > should throw a consistent AssertionError [unknown_array-to-contain-to-include-unknown-3s3p] <snapshot> 1`] = `
{
  "message": "Expected array to contain value",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "diff": "simple",
  "assertionId": "unknown_array-to-contain-to-include-unknown-3s3p"
}
`;

exports[`Sync Collection Assertion Error Snapshots > \"{unknown-array} 'to have length' / 'to have size' {nonnegative-integer}\" [unknown_array-to-have-length-to-have-size-nonnegative_integer-3s3p] > should throw a consistent AssertionError [unknown_array-to-have-length-to-have-size-nonnegative_integer-3s3p] <snapshot> 1`] = `
{
  "message": "Assertion \\"{unknown-array} 'to have length' / 'to have size' {nonnegative-integer}\\" failed:\\n\\u001b[32m- expected  - 2\\u001b[39m\\n\\u001b[31m+ actual    + 0\\u001b[39m\\n\\n\\u001b[2m  Array [\\u001b[22m\\n\\u001b[2m    1,\\u001b[22m\\n\\u001b[2m    2,\\u001b[22m\\n\\u001b[2m    3,\\u001b[22m\\n\\u001b[32m-   null,\\u001b[39m\\n\\u001b[32m-   null,\\u001b[39m\\n\\u001b[2m  ]\\u001b[22m",
  "generatedMessage": false,
  "name": "AssertionError",
  "code": "ERR_ASSERTION",
  "actual": [
    1,
    2,
    3
  ],
  "expected": [
    1,
    2,
    3,
    null,
    null
  ],
  "diff": "simple",
  "assertionId": "unknown_array-to-have-length-to-have-size-nonnegative_integer-3s3p"
}
`;
